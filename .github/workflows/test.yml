name: Running Tests
on:
  workflow_dispatch: # Allows manual triggering
jobs:
  # Label of the container job
  test-runner-job:
    name: Test PG ${{ matrix.pg_version }} # Add a custom name using the matrix variable
    # Containers must run in Linux based operating systems
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false # Move fail-fast under strategy
      matrix:
        pg_version: [16, 17] # Add matrix for PostgreSQL versions
    # Docker Hub image that `container-job` executes in
    container: debian:bookworm-slim
    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image using matrix variable
        image: ghcr.io/beshkenadze/bitnami-pgvector:pg${{ matrix.pg_version }}
        # Provide the password for postgres
        # Expose container port 5432, let Docker assign a random host port
        ports:
          - 5432:5432
        env:
          POSTGRESQL_USERNAME: testuser
          POSTGRESQL_POSTGRES_PASSWORD: rootpassword
          POSTGRESQL_PASSWORD: testpassword
          POSTGRESQL_DATABASE: testdb
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd "pg_isready -U postgres -h 0.0.0.0 -p 5432"
          --health-interval 30s
          --health-timeout 10s
          --health-retries 5
    steps:    
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up system packages
        run: |
          apt-get update
          apt-get install -y curl unzip git ca-certificates
      
      - name: Install Bun
        uses: oven-sh/setup-bun@v2
      
      - name: Cache Bun dependencies
        uses: actions/cache@v4
        with:
          path: ~/.bun/install/cache
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lock') }}
          restore-keys: |
            ${{ runner.os }}-bun-
      
      - name: Install dependencies
        run: bun install
        
      - name: Setup CI environment
        run: bun run ci:setup
        
      - name: Run Biome lint
        run: bun run lint
      - name: Run PostgreSQL connection test
        env:
          # Use standard PostgreSQL environment variables for connection within the test script
          PGHOST: postgres
          # Use the dynamically assigned host port
          PGPORT: 5432
          # To use vector extension, we need to use root user
          PGUSER: testuser
          PGPASSWORD: testpassword
          PGDATABASE: testdb
        run: bun run test:pg
      - name: Run pgvector extension test
        env:
          # Use standard PostgreSQL environment variables for connection within the test script
          PGHOST: postgres
          # Use the dynamically assigned host port
          PGPORT: 5432
          # To use vector extension, we need to use root user
          PGUSER: postgres
          PGPASSWORD: rootpassword
          PGDATABASE: testdb
        run: bun run test:vector
      - name: Run pg_search extension test
        env:
          # Use standard PostgreSQL environment variables for connection within the test script
          PGHOST: postgres
          PGPORT: 5432
          # Creating extensions usually requires superuser
          PGUSER: postgres
          PGPASSWORD: rootpassword
          PGDATABASE: testdb
        run: bun run test:search
